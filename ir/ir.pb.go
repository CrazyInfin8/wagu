// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ir.proto

package ir

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ValueType int32

const (
	ValueType_I32 ValueType = 0
	ValueType_I64 ValueType = 1
	ValueType_F32 ValueType = 2
	ValueType_F64 ValueType = 3
)

var ValueType_name = map[int32]string{
	0: "I32",
	1: "I64",
	2: "F32",
	3: "F64",
}
var ValueType_value = map[string]int32{
	"I32": 0,
	"I64": 1,
	"F32": 2,
	"F64": 3,
}

func (x ValueType) String() string {
	return proto.EnumName(ValueType_name, int32(x))
}
func (ValueType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{0}
}

type ElseExpr int32

const (
	ElseExpr_ELSE ElseExpr = 0
)

var ElseExpr_name = map[int32]string{
	0: "ELSE",
}
var ElseExpr_value = map[string]int32{
	"ELSE": 0,
}

func (x ElseExpr) String() string {
	return proto.EnumName(ElseExpr_name, int32(x))
}
func (ElseExpr) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{1}
}

type EndExpr int32

const (
	EndExpr_END EndExpr = 0
)

var EndExpr_name = map[int32]string{
	0: "END",
}
var EndExpr_value = map[string]int32{
	"END": 0,
}

func (x EndExpr) String() string {
	return proto.EnumName(EndExpr_name, int32(x))
}
func (EndExpr) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{2}
}

type UnreachableExpr int32

const (
	UnreachableExpr_UNREACHABLE UnreachableExpr = 0
)

var UnreachableExpr_name = map[int32]string{
	0: "UNREACHABLE",
}
var UnreachableExpr_value = map[string]int32{
	"UNREACHABLE": 0,
}

func (x UnreachableExpr) String() string {
	return proto.EnumName(UnreachableExpr_name, int32(x))
}
func (UnreachableExpr) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{3}
}

type ExportedFunction struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExportedFunction) Reset()         { *m = ExportedFunction{} }
func (m *ExportedFunction) String() string { return proto.CompactTextString(m) }
func (*ExportedFunction) ProtoMessage()    {}
func (*ExportedFunction) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{0}
}
func (m *ExportedFunction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExportedFunction.Unmarshal(m, b)
}
func (m *ExportedFunction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExportedFunction.Marshal(b, m, deterministic)
}
func (dst *ExportedFunction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExportedFunction.Merge(dst, src)
}
func (m *ExportedFunction) XXX_Size() int {
	return xxx_messageInfo_ExportedFunction.Size(m)
}
func (m *ExportedFunction) XXX_DiscardUnknown() {
	xxx_messageInfo_ExportedFunction.DiscardUnknown(m)
}

var xxx_messageInfo_ExportedFunction proto.InternalMessageInfo

func (m *ExportedFunction) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ExportedFunction) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Expr struct {
	// Types that are valid to be assigned to Kind:
	//	*Expr_Binary
	//	*Expr_Block
	//	*Expr_Br
	//	*Expr_BrIf
	//	*Expr_BrTable
	//	*Expr_Call
	//	*Expr_CallIndirect
	//	*Expr_Const
	//	*Expr_CurrentMemory
	//	*Expr_Else
	//	*Expr_End
	//	*Expr_GetGlobal
	//	*Expr_GetLocal
	//	*Expr_GrowMemory
	//	*Expr_If
	//	*Expr_Load
	//	*Expr_Loop
	//	*Expr_Return
	//	*Expr_Select
	//	*Expr_SetGlobal
	//	*Expr_SetLocal
	//	*Expr_Store
	//	*Expr_TeeLocal
	//	*Expr_Unary
	//	*Expr_Unreachable
	Kind                 isExpr_Kind `protobuf_oneof:"kind"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Expr) Reset()         { *m = Expr{} }
func (m *Expr) String() string { return proto.CompactTextString(m) }
func (*Expr) ProtoMessage()    {}
func (*Expr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{1}
}
func (m *Expr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Expr.Unmarshal(m, b)
}
func (m *Expr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Expr.Marshal(b, m, deterministic)
}
func (dst *Expr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Expr.Merge(dst, src)
}
func (m *Expr) XXX_Size() int {
	return xxx_messageInfo_Expr.Size(m)
}
func (m *Expr) XXX_DiscardUnknown() {
	xxx_messageInfo_Expr.DiscardUnknown(m)
}

var xxx_messageInfo_Expr proto.InternalMessageInfo

type isExpr_Kind interface {
	isExpr_Kind()
}

type Expr_Binary struct {
	Binary *BinaryExpr `protobuf:"bytes,1,opt,name=binary,proto3,oneof"`
}

type Expr_Block struct {
	Block *BlockExpr `protobuf:"bytes,2,opt,name=block,proto3,oneof"`
}

type Expr_Br struct {
	Br *BrExpr `protobuf:"bytes,3,opt,name=br,proto3,oneof"`
}

type Expr_BrIf struct {
	BrIf *BrIfExpr `protobuf:"bytes,4,opt,name=br_if,json=brIf,proto3,oneof"`
}

type Expr_BrTable struct {
	BrTable *BrTableExpr `protobuf:"bytes,5,opt,name=br_table,json=brTable,proto3,oneof"`
}

type Expr_Call struct {
	Call *CallExpr `protobuf:"bytes,6,opt,name=call,proto3,oneof"`
}

type Expr_CallIndirect struct {
	CallIndirect *CallIndirectExpr `protobuf:"bytes,7,opt,name=call_indirect,json=callIndirect,proto3,oneof"`
}

type Expr_Const struct {
	Const *ConstExpr `protobuf:"bytes,8,opt,name=const,proto3,oneof"`
}

type Expr_CurrentMemory struct {
	CurrentMemory *CurrentMemoryExpr `protobuf:"bytes,9,opt,name=current_memory,json=currentMemory,proto3,oneof"`
}

type Expr_Else struct {
	Else ElseExpr `protobuf:"varint,10,opt,name=else,proto3,enum=ir.ElseExpr,oneof"`
}

type Expr_End struct {
	End EndExpr `protobuf:"varint,11,opt,name=end,proto3,enum=ir.EndExpr,oneof"`
}

type Expr_GetGlobal struct {
	GetGlobal *GetGlobalExpr `protobuf:"bytes,12,opt,name=get_global,json=getGlobal,proto3,oneof"`
}

type Expr_GetLocal struct {
	GetLocal *GetLocalExpr `protobuf:"bytes,13,opt,name=get_local,json=getLocal,proto3,oneof"`
}

type Expr_GrowMemory struct {
	GrowMemory *GrowMemoryExpr `protobuf:"bytes,14,opt,name=grow_memory,json=growMemory,proto3,oneof"`
}

type Expr_If struct {
	If *IfExpr `protobuf:"bytes,15,opt,name=if,proto3,oneof"`
}

type Expr_Load struct {
	Load *LoadExpr `protobuf:"bytes,16,opt,name=load,proto3,oneof"`
}

type Expr_Loop struct {
	Loop *LoopExpr `protobuf:"bytes,17,opt,name=loop,proto3,oneof"`
}

type Expr_Return struct {
	Return *ReturnExpr `protobuf:"bytes,18,opt,name=return,proto3,oneof"`
}

type Expr_Select struct {
	Select *SelectExpr `protobuf:"bytes,19,opt,name=select,proto3,oneof"`
}

type Expr_SetGlobal struct {
	SetGlobal *SetGlobalExpr `protobuf:"bytes,20,opt,name=set_global,json=setGlobal,proto3,oneof"`
}

type Expr_SetLocal struct {
	SetLocal *SetLocalExpr `protobuf:"bytes,21,opt,name=set_local,json=setLocal,proto3,oneof"`
}

type Expr_Store struct {
	Store *StoreExpr `protobuf:"bytes,22,opt,name=store,proto3,oneof"`
}

type Expr_TeeLocal struct {
	TeeLocal *TeeLocalExpr `protobuf:"bytes,23,opt,name=tee_local,json=teeLocal,proto3,oneof"`
}

type Expr_Unary struct {
	Unary *UnaryExpr `protobuf:"bytes,24,opt,name=unary,proto3,oneof"`
}

type Expr_Unreachable struct {
	Unreachable UnreachableExpr `protobuf:"varint,25,opt,name=unreachable,proto3,enum=ir.UnreachableExpr,oneof"`
}

func (*Expr_Binary) isExpr_Kind() {}

func (*Expr_Block) isExpr_Kind() {}

func (*Expr_Br) isExpr_Kind() {}

func (*Expr_BrIf) isExpr_Kind() {}

func (*Expr_BrTable) isExpr_Kind() {}

func (*Expr_Call) isExpr_Kind() {}

func (*Expr_CallIndirect) isExpr_Kind() {}

func (*Expr_Const) isExpr_Kind() {}

func (*Expr_CurrentMemory) isExpr_Kind() {}

func (*Expr_Else) isExpr_Kind() {}

func (*Expr_End) isExpr_Kind() {}

func (*Expr_GetGlobal) isExpr_Kind() {}

func (*Expr_GetLocal) isExpr_Kind() {}

func (*Expr_GrowMemory) isExpr_Kind() {}

func (*Expr_If) isExpr_Kind() {}

func (*Expr_Load) isExpr_Kind() {}

func (*Expr_Loop) isExpr_Kind() {}

func (*Expr_Return) isExpr_Kind() {}

func (*Expr_Select) isExpr_Kind() {}

func (*Expr_SetGlobal) isExpr_Kind() {}

func (*Expr_SetLocal) isExpr_Kind() {}

func (*Expr_Store) isExpr_Kind() {}

func (*Expr_TeeLocal) isExpr_Kind() {}

func (*Expr_Unary) isExpr_Kind() {}

func (*Expr_Unreachable) isExpr_Kind() {}

func (m *Expr) GetKind() isExpr_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *Expr) GetBinary() *BinaryExpr {
	if x, ok := m.GetKind().(*Expr_Binary); ok {
		return x.Binary
	}
	return nil
}

func (m *Expr) GetBlock() *BlockExpr {
	if x, ok := m.GetKind().(*Expr_Block); ok {
		return x.Block
	}
	return nil
}

func (m *Expr) GetBr() *BrExpr {
	if x, ok := m.GetKind().(*Expr_Br); ok {
		return x.Br
	}
	return nil
}

func (m *Expr) GetBrIf() *BrIfExpr {
	if x, ok := m.GetKind().(*Expr_BrIf); ok {
		return x.BrIf
	}
	return nil
}

func (m *Expr) GetBrTable() *BrTableExpr {
	if x, ok := m.GetKind().(*Expr_BrTable); ok {
		return x.BrTable
	}
	return nil
}

func (m *Expr) GetCall() *CallExpr {
	if x, ok := m.GetKind().(*Expr_Call); ok {
		return x.Call
	}
	return nil
}

func (m *Expr) GetCallIndirect() *CallIndirectExpr {
	if x, ok := m.GetKind().(*Expr_CallIndirect); ok {
		return x.CallIndirect
	}
	return nil
}

func (m *Expr) GetConst() *ConstExpr {
	if x, ok := m.GetKind().(*Expr_Const); ok {
		return x.Const
	}
	return nil
}

func (m *Expr) GetCurrentMemory() *CurrentMemoryExpr {
	if x, ok := m.GetKind().(*Expr_CurrentMemory); ok {
		return x.CurrentMemory
	}
	return nil
}

func (m *Expr) GetElse() ElseExpr {
	if x, ok := m.GetKind().(*Expr_Else); ok {
		return x.Else
	}
	return ElseExpr_ELSE
}

func (m *Expr) GetEnd() EndExpr {
	if x, ok := m.GetKind().(*Expr_End); ok {
		return x.End
	}
	return EndExpr_END
}

func (m *Expr) GetGetGlobal() *GetGlobalExpr {
	if x, ok := m.GetKind().(*Expr_GetGlobal); ok {
		return x.GetGlobal
	}
	return nil
}

func (m *Expr) GetGetLocal() *GetLocalExpr {
	if x, ok := m.GetKind().(*Expr_GetLocal); ok {
		return x.GetLocal
	}
	return nil
}

func (m *Expr) GetGrowMemory() *GrowMemoryExpr {
	if x, ok := m.GetKind().(*Expr_GrowMemory); ok {
		return x.GrowMemory
	}
	return nil
}

func (m *Expr) GetIf() *IfExpr {
	if x, ok := m.GetKind().(*Expr_If); ok {
		return x.If
	}
	return nil
}

func (m *Expr) GetLoad() *LoadExpr {
	if x, ok := m.GetKind().(*Expr_Load); ok {
		return x.Load
	}
	return nil
}

func (m *Expr) GetLoop() *LoopExpr {
	if x, ok := m.GetKind().(*Expr_Loop); ok {
		return x.Loop
	}
	return nil
}

func (m *Expr) GetReturn() *ReturnExpr {
	if x, ok := m.GetKind().(*Expr_Return); ok {
		return x.Return
	}
	return nil
}

func (m *Expr) GetSelect() *SelectExpr {
	if x, ok := m.GetKind().(*Expr_Select); ok {
		return x.Select
	}
	return nil
}

func (m *Expr) GetSetGlobal() *SetGlobalExpr {
	if x, ok := m.GetKind().(*Expr_SetGlobal); ok {
		return x.SetGlobal
	}
	return nil
}

func (m *Expr) GetSetLocal() *SetLocalExpr {
	if x, ok := m.GetKind().(*Expr_SetLocal); ok {
		return x.SetLocal
	}
	return nil
}

func (m *Expr) GetStore() *StoreExpr {
	if x, ok := m.GetKind().(*Expr_Store); ok {
		return x.Store
	}
	return nil
}

func (m *Expr) GetTeeLocal() *TeeLocalExpr {
	if x, ok := m.GetKind().(*Expr_TeeLocal); ok {
		return x.TeeLocal
	}
	return nil
}

func (m *Expr) GetUnary() *UnaryExpr {
	if x, ok := m.GetKind().(*Expr_Unary); ok {
		return x.Unary
	}
	return nil
}

func (m *Expr) GetUnreachable() UnreachableExpr {
	if x, ok := m.GetKind().(*Expr_Unreachable); ok {
		return x.Unreachable
	}
	return UnreachableExpr_UNREACHABLE
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Expr) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Expr_OneofMarshaler, _Expr_OneofUnmarshaler, _Expr_OneofSizer, []interface{}{
		(*Expr_Binary)(nil),
		(*Expr_Block)(nil),
		(*Expr_Br)(nil),
		(*Expr_BrIf)(nil),
		(*Expr_BrTable)(nil),
		(*Expr_Call)(nil),
		(*Expr_CallIndirect)(nil),
		(*Expr_Const)(nil),
		(*Expr_CurrentMemory)(nil),
		(*Expr_Else)(nil),
		(*Expr_End)(nil),
		(*Expr_GetGlobal)(nil),
		(*Expr_GetLocal)(nil),
		(*Expr_GrowMemory)(nil),
		(*Expr_If)(nil),
		(*Expr_Load)(nil),
		(*Expr_Loop)(nil),
		(*Expr_Return)(nil),
		(*Expr_Select)(nil),
		(*Expr_SetGlobal)(nil),
		(*Expr_SetLocal)(nil),
		(*Expr_Store)(nil),
		(*Expr_TeeLocal)(nil),
		(*Expr_Unary)(nil),
		(*Expr_Unreachable)(nil),
	}
}

func _Expr_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Expr)
	// kind
	switch x := m.Kind.(type) {
	case *Expr_Binary:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Binary); err != nil {
			return err
		}
	case *Expr_Block:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Block); err != nil {
			return err
		}
	case *Expr_Br:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Br); err != nil {
			return err
		}
	case *Expr_BrIf:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BrIf); err != nil {
			return err
		}
	case *Expr_BrTable:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BrTable); err != nil {
			return err
		}
	case *Expr_Call:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Call); err != nil {
			return err
		}
	case *Expr_CallIndirect:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CallIndirect); err != nil {
			return err
		}
	case *Expr_Const:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Const); err != nil {
			return err
		}
	case *Expr_CurrentMemory:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CurrentMemory); err != nil {
			return err
		}
	case *Expr_Else:
		b.EncodeVarint(10<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Else))
	case *Expr_End:
		b.EncodeVarint(11<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.End))
	case *Expr_GetGlobal:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetGlobal); err != nil {
			return err
		}
	case *Expr_GetLocal:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetLocal); err != nil {
			return err
		}
	case *Expr_GrowMemory:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GrowMemory); err != nil {
			return err
		}
	case *Expr_If:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.If); err != nil {
			return err
		}
	case *Expr_Load:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Load); err != nil {
			return err
		}
	case *Expr_Loop:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Loop); err != nil {
			return err
		}
	case *Expr_Return:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Return); err != nil {
			return err
		}
	case *Expr_Select:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Select); err != nil {
			return err
		}
	case *Expr_SetGlobal:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SetGlobal); err != nil {
			return err
		}
	case *Expr_SetLocal:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SetLocal); err != nil {
			return err
		}
	case *Expr_Store:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Store); err != nil {
			return err
		}
	case *Expr_TeeLocal:
		b.EncodeVarint(23<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TeeLocal); err != nil {
			return err
		}
	case *Expr_Unary:
		b.EncodeVarint(24<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Unary); err != nil {
			return err
		}
	case *Expr_Unreachable:
		b.EncodeVarint(25<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Unreachable))
	case nil:
	default:
		return fmt.Errorf("Expr.Kind has unexpected type %T", x)
	}
	return nil
}

func _Expr_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Expr)
	switch tag {
	case 1: // kind.binary
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BinaryExpr)
		err := b.DecodeMessage(msg)
		m.Kind = &Expr_Binary{msg}
		return true, err
	case 2: // kind.block
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BlockExpr)
		err := b.DecodeMessage(msg)
		m.Kind = &Expr_Block{msg}
		return true, err
	case 3: // kind.br
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BrExpr)
		err := b.DecodeMessage(msg)
		m.Kind = &Expr_Br{msg}
		return true, err
	case 4: // kind.br_if
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BrIfExpr)
		err := b.DecodeMessage(msg)
		m.Kind = &Expr_BrIf{msg}
		return true, err
	case 5: // kind.br_table
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BrTableExpr)
		err := b.DecodeMessage(msg)
		m.Kind = &Expr_BrTable{msg}
		return true, err
	case 6: // kind.call
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CallExpr)
		err := b.DecodeMessage(msg)
		m.Kind = &Expr_Call{msg}
		return true, err
	case 7: // kind.call_indirect
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CallIndirectExpr)
		err := b.DecodeMessage(msg)
		m.Kind = &Expr_CallIndirect{msg}
		return true, err
	case 8: // kind.const
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ConstExpr)
		err := b.DecodeMessage(msg)
		m.Kind = &Expr_Const{msg}
		return true, err
	case 9: // kind.current_memory
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CurrentMemoryExpr)
		err := b.DecodeMessage(msg)
		m.Kind = &Expr_CurrentMemory{msg}
		return true, err
	case 10: // kind.else
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Kind = &Expr_Else{ElseExpr(x)}
		return true, err
	case 11: // kind.end
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Kind = &Expr_End{EndExpr(x)}
		return true, err
	case 12: // kind.get_global
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetGlobalExpr)
		err := b.DecodeMessage(msg)
		m.Kind = &Expr_GetGlobal{msg}
		return true, err
	case 13: // kind.get_local
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetLocalExpr)
		err := b.DecodeMessage(msg)
		m.Kind = &Expr_GetLocal{msg}
		return true, err
	case 14: // kind.grow_memory
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GrowMemoryExpr)
		err := b.DecodeMessage(msg)
		m.Kind = &Expr_GrowMemory{msg}
		return true, err
	case 15: // kind.if
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(IfExpr)
		err := b.DecodeMessage(msg)
		m.Kind = &Expr_If{msg}
		return true, err
	case 16: // kind.load
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LoadExpr)
		err := b.DecodeMessage(msg)
		m.Kind = &Expr_Load{msg}
		return true, err
	case 17: // kind.loop
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LoopExpr)
		err := b.DecodeMessage(msg)
		m.Kind = &Expr_Loop{msg}
		return true, err
	case 18: // kind.return
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReturnExpr)
		err := b.DecodeMessage(msg)
		m.Kind = &Expr_Return{msg}
		return true, err
	case 19: // kind.select
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SelectExpr)
		err := b.DecodeMessage(msg)
		m.Kind = &Expr_Select{msg}
		return true, err
	case 20: // kind.set_global
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SetGlobalExpr)
		err := b.DecodeMessage(msg)
		m.Kind = &Expr_SetGlobal{msg}
		return true, err
	case 21: // kind.set_local
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SetLocalExpr)
		err := b.DecodeMessage(msg)
		m.Kind = &Expr_SetLocal{msg}
		return true, err
	case 22: // kind.store
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StoreExpr)
		err := b.DecodeMessage(msg)
		m.Kind = &Expr_Store{msg}
		return true, err
	case 23: // kind.tee_local
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TeeLocalExpr)
		err := b.DecodeMessage(msg)
		m.Kind = &Expr_TeeLocal{msg}
		return true, err
	case 24: // kind.unary
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnaryExpr)
		err := b.DecodeMessage(msg)
		m.Kind = &Expr_Unary{msg}
		return true, err
	case 25: // kind.unreachable
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Kind = &Expr_Unreachable{UnreachableExpr(x)}
		return true, err
	default:
		return false, nil
	}
}

func _Expr_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Expr)
	// kind
	switch x := m.Kind.(type) {
	case *Expr_Binary:
		s := proto.Size(x.Binary)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expr_Block:
		s := proto.Size(x.Block)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expr_Br:
		s := proto.Size(x.Br)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expr_BrIf:
		s := proto.Size(x.BrIf)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expr_BrTable:
		s := proto.Size(x.BrTable)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expr_Call:
		s := proto.Size(x.Call)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expr_CallIndirect:
		s := proto.Size(x.CallIndirect)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expr_Const:
		s := proto.Size(x.Const)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expr_CurrentMemory:
		s := proto.Size(x.CurrentMemory)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expr_Else:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Else))
	case *Expr_End:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.End))
	case *Expr_GetGlobal:
		s := proto.Size(x.GetGlobal)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expr_GetLocal:
		s := proto.Size(x.GetLocal)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expr_GrowMemory:
		s := proto.Size(x.GrowMemory)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expr_If:
		s := proto.Size(x.If)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expr_Load:
		s := proto.Size(x.Load)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expr_Loop:
		s := proto.Size(x.Loop)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expr_Return:
		s := proto.Size(x.Return)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expr_Select:
		s := proto.Size(x.Select)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expr_SetGlobal:
		s := proto.Size(x.SetGlobal)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expr_SetLocal:
		s := proto.Size(x.SetLocal)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expr_Store:
		s := proto.Size(x.Store)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expr_TeeLocal:
		s := proto.Size(x.TeeLocal)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expr_Unary:
		s := proto.Size(x.Unary)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expr_Unreachable:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.Unreachable))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Function struct {
	Id                   uint32       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Sig                  *FunctionSig `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`
	Locals               []ValueType  `protobuf:"varint,3,rep,packed,name=locals,proto3,enum=ir.ValueType" json:"locals,omitempty"`
	Exprs                []*Expr      `protobuf:"bytes,4,rep,name=exprs,proto3" json:"exprs,omitempty"`
	MaxStackSize         uint32       `protobuf:"varint,5,opt,name=max_stack_size,json=maxStackSize,proto3" json:"max_stack_size,omitempty"`
	StackVars            *StackVars   `protobuf:"bytes,6,opt,name=stack_vars,json=stackVars,proto3" json:"stack_vars,omitempty"`
	HasLabels            bool         `protobuf:"varint,7,opt,name=has_labels,json=hasLabels,proto3" json:"has_labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Function) Reset()         { *m = Function{} }
func (m *Function) String() string { return proto.CompactTextString(m) }
func (*Function) ProtoMessage()    {}
func (*Function) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{2}
}
func (m *Function) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Function.Unmarshal(m, b)
}
func (m *Function) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Function.Marshal(b, m, deterministic)
}
func (dst *Function) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Function.Merge(dst, src)
}
func (m *Function) XXX_Size() int {
	return xxx_messageInfo_Function.Size(m)
}
func (m *Function) XXX_DiscardUnknown() {
	xxx_messageInfo_Function.DiscardUnknown(m)
}

var xxx_messageInfo_Function proto.InternalMessageInfo

func (m *Function) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Function) GetSig() *FunctionSig {
	if m != nil {
		return m.Sig
	}
	return nil
}

func (m *Function) GetLocals() []ValueType {
	if m != nil {
		return m.Locals
	}
	return nil
}

func (m *Function) GetExprs() []*Expr {
	if m != nil {
		return m.Exprs
	}
	return nil
}

func (m *Function) GetMaxStackSize() uint32 {
	if m != nil {
		return m.MaxStackSize
	}
	return 0
}

func (m *Function) GetStackVars() *StackVars {
	if m != nil {
		return m.StackVars
	}
	return nil
}

func (m *Function) GetHasLabels() bool {
	if m != nil {
		return m.HasLabels
	}
	return false
}

type FunctionSig struct {
	ParamTypes           []ValueType `protobuf:"varint,1,rep,packed,name=param_types,json=paramTypes,proto3,enum=ir.ValueType" json:"param_types,omitempty"`
	ReturnTypes          []ValueType `protobuf:"varint,2,rep,packed,name=return_types,json=returnTypes,proto3,enum=ir.ValueType" json:"return_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *FunctionSig) Reset()         { *m = FunctionSig{} }
func (m *FunctionSig) String() string { return proto.CompactTextString(m) }
func (*FunctionSig) ProtoMessage()    {}
func (*FunctionSig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{3}
}
func (m *FunctionSig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FunctionSig.Unmarshal(m, b)
}
func (m *FunctionSig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FunctionSig.Marshal(b, m, deterministic)
}
func (dst *FunctionSig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FunctionSig.Merge(dst, src)
}
func (m *FunctionSig) XXX_Size() int {
	return xxx_messageInfo_FunctionSig.Size(m)
}
func (m *FunctionSig) XXX_DiscardUnknown() {
	xxx_messageInfo_FunctionSig.DiscardUnknown(m)
}

var xxx_messageInfo_FunctionSig proto.InternalMessageInfo

func (m *FunctionSig) GetParamTypes() []ValueType {
	if m != nil {
		return m.ParamTypes
	}
	return nil
}

func (m *FunctionSig) GetReturnTypes() []ValueType {
	if m != nil {
		return m.ReturnTypes
	}
	return nil
}

type ImportedFunction struct {
	ModuleName           string       `protobuf:"bytes,1,opt,name=module_name,json=moduleName,proto3" json:"module_name,omitempty"`
	FieldName            string       `protobuf:"bytes,2,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	Sig                  *FunctionSig `protobuf:"bytes,3,opt,name=sig,proto3" json:"sig,omitempty"`
	TypeId               uint32       `protobuf:"varint,4,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ImportedFunction) Reset()         { *m = ImportedFunction{} }
func (m *ImportedFunction) String() string { return proto.CompactTextString(m) }
func (*ImportedFunction) ProtoMessage()    {}
func (*ImportedFunction) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{4}
}
func (m *ImportedFunction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportedFunction.Unmarshal(m, b)
}
func (m *ImportedFunction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportedFunction.Marshal(b, m, deterministic)
}
func (dst *ImportedFunction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportedFunction.Merge(dst, src)
}
func (m *ImportedFunction) XXX_Size() int {
	return xxx_messageInfo_ImportedFunction.Size(m)
}
func (m *ImportedFunction) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportedFunction.DiscardUnknown(m)
}

var xxx_messageInfo_ImportedFunction proto.InternalMessageInfo

func (m *ImportedFunction) GetModuleName() string {
	if m != nil {
		return m.ModuleName
	}
	return ""
}

func (m *ImportedFunction) GetFieldName() string {
	if m != nil {
		return m.FieldName
	}
	return ""
}

func (m *ImportedFunction) GetSig() *FunctionSig {
	if m != nil {
		return m.Sig
	}
	return nil
}

func (m *ImportedFunction) GetTypeId() uint32 {
	if m != nil {
		return m.TypeId
	}
	return 0
}

type Memory struct {
	Size                 uint32            `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Segments             map[uint32][]byte `protobuf:"bytes,2,rep,name=segments,proto3" json:"segments,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Memory) Reset()         { *m = Memory{} }
func (m *Memory) String() string { return proto.CompactTextString(m) }
func (*Memory) ProtoMessage()    {}
func (*Memory) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{5}
}
func (m *Memory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Memory.Unmarshal(m, b)
}
func (m *Memory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Memory.Marshal(b, m, deterministic)
}
func (dst *Memory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Memory.Merge(dst, src)
}
func (m *Memory) XXX_Size() int {
	return xxx_messageInfo_Memory.Size(m)
}
func (m *Memory) XXX_DiscardUnknown() {
	xxx_messageInfo_Memory.DiscardUnknown(m)
}

var xxx_messageInfo_Memory proto.InternalMessageInfo

func (m *Memory) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Memory) GetSegments() map[uint32][]byte {
	if m != nil {
		return m.Segments
	}
	return nil
}

type Module struct {
	Globals              []*Value            `protobuf:"bytes,1,rep,name=globals,proto3" json:"globals,omitempty"`
	Functions            []*Function         `protobuf:"bytes,2,rep,name=functions,proto3" json:"functions,omitempty"`
	ExportedFunctions    []*ExportedFunction `protobuf:"bytes,3,rep,name=exported_functions,json=exportedFunctions,proto3" json:"exported_functions,omitempty"`
	ImportedFunctions    []*ImportedFunction `protobuf:"bytes,4,rep,name=imported_functions,json=importedFunctions,proto3" json:"imported_functions,omitempty"`
	Memory               *Memory             `protobuf:"bytes,5,opt,name=memory,proto3" json:"memory,omitempty"`
	Table                []*TableEntry       `protobuf:"bytes,6,rep,name=table,proto3" json:"table,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Module) Reset()         { *m = Module{} }
func (m *Module) String() string { return proto.CompactTextString(m) }
func (*Module) ProtoMessage()    {}
func (*Module) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{6}
}
func (m *Module) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Module.Unmarshal(m, b)
}
func (m *Module) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Module.Marshal(b, m, deterministic)
}
func (dst *Module) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Module.Merge(dst, src)
}
func (m *Module) XXX_Size() int {
	return xxx_messageInfo_Module.Size(m)
}
func (m *Module) XXX_DiscardUnknown() {
	xxx_messageInfo_Module.DiscardUnknown(m)
}

var xxx_messageInfo_Module proto.InternalMessageInfo

func (m *Module) GetGlobals() []*Value {
	if m != nil {
		return m.Globals
	}
	return nil
}

func (m *Module) GetFunctions() []*Function {
	if m != nil {
		return m.Functions
	}
	return nil
}

func (m *Module) GetExportedFunctions() []*ExportedFunction {
	if m != nil {
		return m.ExportedFunctions
	}
	return nil
}

func (m *Module) GetImportedFunctions() []*ImportedFunction {
	if m != nil {
		return m.ImportedFunctions
	}
	return nil
}

func (m *Module) GetMemory() *Memory {
	if m != nil {
		return m.Memory
	}
	return nil
}

func (m *Module) GetTable() []*TableEntry {
	if m != nil {
		return m.Table
	}
	return nil
}

type StackVar struct {
	Id                   uint32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ValueType            ValueType `protobuf:"varint,2,opt,name=value_type,json=valueType,proto3,enum=ir.ValueType" json:"value_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *StackVar) Reset()         { *m = StackVar{} }
func (m *StackVar) String() string { return proto.CompactTextString(m) }
func (*StackVar) ProtoMessage()    {}
func (*StackVar) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{7}
}
func (m *StackVar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StackVar.Unmarshal(m, b)
}
func (m *StackVar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StackVar.Marshal(b, m, deterministic)
}
func (dst *StackVar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StackVar.Merge(dst, src)
}
func (m *StackVar) XXX_Size() int {
	return xxx_messageInfo_StackVar.Size(m)
}
func (m *StackVar) XXX_DiscardUnknown() {
	xxx_messageInfo_StackVar.DiscardUnknown(m)
}

var xxx_messageInfo_StackVar proto.InternalMessageInfo

func (m *StackVar) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *StackVar) GetValueType() ValueType {
	if m != nil {
		return m.ValueType
	}
	return ValueType_I32
}

type StackVars struct {
	I32                  []uint32 `protobuf:"varint,1,rep,packed,name=i32,proto3" json:"i32,omitempty"`
	I64                  []uint32 `protobuf:"varint,2,rep,packed,name=i64,proto3" json:"i64,omitempty"`
	F32                  []uint32 `protobuf:"varint,3,rep,packed,name=f32,proto3" json:"f32,omitempty"`
	F64                  []uint32 `protobuf:"varint,4,rep,packed,name=f64,proto3" json:"f64,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StackVars) Reset()         { *m = StackVars{} }
func (m *StackVars) String() string { return proto.CompactTextString(m) }
func (*StackVars) ProtoMessage()    {}
func (*StackVars) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{8}
}
func (m *StackVars) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StackVars.Unmarshal(m, b)
}
func (m *StackVars) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StackVars.Marshal(b, m, deterministic)
}
func (dst *StackVars) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StackVars.Merge(dst, src)
}
func (m *StackVars) XXX_Size() int {
	return xxx_messageInfo_StackVars.Size(m)
}
func (m *StackVars) XXX_DiscardUnknown() {
	xxx_messageInfo_StackVars.DiscardUnknown(m)
}

var xxx_messageInfo_StackVars proto.InternalMessageInfo

func (m *StackVars) GetI32() []uint32 {
	if m != nil {
		return m.I32
	}
	return nil
}

func (m *StackVars) GetI64() []uint32 {
	if m != nil {
		return m.I64
	}
	return nil
}

func (m *StackVars) GetF32() []uint32 {
	if m != nil {
		return m.F32
	}
	return nil
}

func (m *StackVars) GetF64() []uint32 {
	if m != nil {
		return m.F64
	}
	return nil
}

type TableEntry struct {
	FunctionId           int64    `protobuf:"zigzag64,1,opt,name=function_id,json=functionId,proto3" json:"function_id,omitempty"`
	NumParams            uint32   `protobuf:"varint,2,opt,name=num_params,json=numParams,proto3" json:"num_params,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TableEntry) Reset()         { *m = TableEntry{} }
func (m *TableEntry) String() string { return proto.CompactTextString(m) }
func (*TableEntry) ProtoMessage()    {}
func (*TableEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{9}
}
func (m *TableEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableEntry.Unmarshal(m, b)
}
func (m *TableEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableEntry.Marshal(b, m, deterministic)
}
func (dst *TableEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableEntry.Merge(dst, src)
}
func (m *TableEntry) XXX_Size() int {
	return xxx_messageInfo_TableEntry.Size(m)
}
func (m *TableEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_TableEntry.DiscardUnknown(m)
}

var xxx_messageInfo_TableEntry proto.InternalMessageInfo

func (m *TableEntry) GetFunctionId() int64 {
	if m != nil {
		return m.FunctionId
	}
	return 0
}

func (m *TableEntry) GetNumParams() uint32 {
	if m != nil {
		return m.NumParams
	}
	return 0
}

type Value struct {
	// Types that are valid to be assigned to Kind:
	//	*Value_I32
	//	*Value_I64
	//	*Value_F32
	//	*Value_F64
	Kind                 isValue_Kind `protobuf_oneof:"kind"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Value) Reset()         { *m = Value{} }
func (m *Value) String() string { return proto.CompactTextString(m) }
func (*Value) ProtoMessage()    {}
func (*Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{10}
}
func (m *Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Value.Unmarshal(m, b)
}
func (m *Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Value.Marshal(b, m, deterministic)
}
func (dst *Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Value.Merge(dst, src)
}
func (m *Value) XXX_Size() int {
	return xxx_messageInfo_Value.Size(m)
}
func (m *Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Value proto.InternalMessageInfo

type isValue_Kind interface {
	isValue_Kind()
}

type Value_I32 struct {
	I32 int32 `protobuf:"zigzag32,1,opt,name=i32,proto3,oneof"`
}

type Value_I64 struct {
	I64 int64 `protobuf:"zigzag64,2,opt,name=i64,proto3,oneof"`
}

type Value_F32 struct {
	F32 float32 `protobuf:"fixed32,3,opt,name=f32,proto3,oneof"`
}

type Value_F64 struct {
	F64 float64 `protobuf:"fixed64,4,opt,name=f64,proto3,oneof"`
}

func (*Value_I32) isValue_Kind() {}

func (*Value_I64) isValue_Kind() {}

func (*Value_F32) isValue_Kind() {}

func (*Value_F64) isValue_Kind() {}

func (m *Value) GetKind() isValue_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *Value) GetI32() int32 {
	if x, ok := m.GetKind().(*Value_I32); ok {
		return x.I32
	}
	return 0
}

func (m *Value) GetI64() int64 {
	if x, ok := m.GetKind().(*Value_I64); ok {
		return x.I64
	}
	return 0
}

func (m *Value) GetF32() float32 {
	if x, ok := m.GetKind().(*Value_F32); ok {
		return x.F32
	}
	return 0
}

func (m *Value) GetF64() float64 {
	if x, ok := m.GetKind().(*Value_F64); ok {
		return x.F64
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Value_OneofMarshaler, _Value_OneofUnmarshaler, _Value_OneofSizer, []interface{}{
		(*Value_I32)(nil),
		(*Value_I64)(nil),
		(*Value_F32)(nil),
		(*Value_F64)(nil),
	}
}

func _Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Value)
	// kind
	switch x := m.Kind.(type) {
	case *Value_I32:
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeZigzag32(uint64(x.I32))
	case *Value_I64:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeZigzag64(uint64(x.I64))
	case *Value_F32:
		b.EncodeVarint(3<<3 | proto.WireFixed32)
		b.EncodeFixed32(uint64(math.Float32bits(x.F32)))
	case *Value_F64:
		b.EncodeVarint(4<<3 | proto.WireFixed64)
		b.EncodeFixed64(math.Float64bits(x.F64))
	case nil:
	default:
		return fmt.Errorf("Value.Kind has unexpected type %T", x)
	}
	return nil
}

func _Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Value)
	switch tag {
	case 1: // kind.i32
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeZigzag32()
		m.Kind = &Value_I32{int32(x)}
		return true, err
	case 2: // kind.i64
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeZigzag64()
		m.Kind = &Value_I64{int64(x)}
		return true, err
	case 3: // kind.f32
		if wire != proto.WireFixed32 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed32()
		m.Kind = &Value_F32{math.Float32frombits(uint32(x))}
		return true, err
	case 4: // kind.f64
		if wire != proto.WireFixed64 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed64()
		m.Kind = &Value_F64{math.Float64frombits(x)}
		return true, err
	default:
		return false, nil
	}
}

func _Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Value)
	// kind
	switch x := m.Kind.(type) {
	case *Value_I32:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64((uint32(x.I32) << 1) ^ uint32((int32(x.I32) >> 31))))
	case *Value_I64:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(uint64(x.I64<<1) ^ uint64((int64(x.I64) >> 63))))
	case *Value_F32:
		n += 1 // tag and wire
		n += 4
	case *Value_F64:
		n += 1 // tag and wire
		n += 8
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type BinaryExpr struct {
	OpCode               uint32      `protobuf:"varint,1,opt,name=op_code,json=opCode,proto3" json:"op_code,omitempty"`
	Param1               *StackVar   `protobuf:"bytes,2,opt,name=param1,proto3" json:"param1,omitempty"`
	Param2               *StackVar   `protobuf:"bytes,3,opt,name=param2,proto3" json:"param2,omitempty"`
	Returns              []*StackVar `protobuf:"bytes,4,rep,name=returns,proto3" json:"returns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *BinaryExpr) Reset()         { *m = BinaryExpr{} }
func (m *BinaryExpr) String() string { return proto.CompactTextString(m) }
func (*BinaryExpr) ProtoMessage()    {}
func (*BinaryExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{11}
}
func (m *BinaryExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinaryExpr.Unmarshal(m, b)
}
func (m *BinaryExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinaryExpr.Marshal(b, m, deterministic)
}
func (dst *BinaryExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinaryExpr.Merge(dst, src)
}
func (m *BinaryExpr) XXX_Size() int {
	return xxx_messageInfo_BinaryExpr.Size(m)
}
func (m *BinaryExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_BinaryExpr.DiscardUnknown(m)
}

var xxx_messageInfo_BinaryExpr proto.InternalMessageInfo

func (m *BinaryExpr) GetOpCode() uint32 {
	if m != nil {
		return m.OpCode
	}
	return 0
}

func (m *BinaryExpr) GetParam1() *StackVar {
	if m != nil {
		return m.Param1
	}
	return nil
}

func (m *BinaryExpr) GetParam2() *StackVar {
	if m != nil {
		return m.Param2
	}
	return nil
}

func (m *BinaryExpr) GetReturns() []*StackVar {
	if m != nil {
		return m.Returns
	}
	return nil
}

type BlockExpr struct {
	LabelId              uint32   `protobuf:"varint,1,opt,name=label_id,json=labelId,proto3" json:"label_id,omitempty"`
	LabelUsed            bool     `protobuf:"varint,2,opt,name=label_used,json=labelUsed,proto3" json:"label_used,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockExpr) Reset()         { *m = BlockExpr{} }
func (m *BlockExpr) String() string { return proto.CompactTextString(m) }
func (*BlockExpr) ProtoMessage()    {}
func (*BlockExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{12}
}
func (m *BlockExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockExpr.Unmarshal(m, b)
}
func (m *BlockExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockExpr.Marshal(b, m, deterministic)
}
func (dst *BlockExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockExpr.Merge(dst, src)
}
func (m *BlockExpr) XXX_Size() int {
	return xxx_messageInfo_BlockExpr.Size(m)
}
func (m *BlockExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockExpr.DiscardUnknown(m)
}

var xxx_messageInfo_BlockExpr proto.InternalMessageInfo

func (m *BlockExpr) GetLabelId() uint32 {
	if m != nil {
		return m.LabelId
	}
	return 0
}

func (m *BlockExpr) GetLabelUsed() bool {
	if m != nil {
		return m.LabelUsed
	}
	return false
}

type BrExpr struct {
	LabelId              uint32   `protobuf:"varint,1,opt,name=label_id,json=labelId,proto3" json:"label_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrExpr) Reset()         { *m = BrExpr{} }
func (m *BrExpr) String() string { return proto.CompactTextString(m) }
func (*BrExpr) ProtoMessage()    {}
func (*BrExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{13}
}
func (m *BrExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrExpr.Unmarshal(m, b)
}
func (m *BrExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrExpr.Marshal(b, m, deterministic)
}
func (dst *BrExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrExpr.Merge(dst, src)
}
func (m *BrExpr) XXX_Size() int {
	return xxx_messageInfo_BrExpr.Size(m)
}
func (m *BrExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_BrExpr.DiscardUnknown(m)
}

var xxx_messageInfo_BrExpr proto.InternalMessageInfo

func (m *BrExpr) GetLabelId() uint32 {
	if m != nil {
		return m.LabelId
	}
	return 0
}

type BrIfExpr struct {
	LabelId              uint32    `protobuf:"varint,1,opt,name=label_id,json=labelId,proto3" json:"label_id,omitempty"`
	Param                *StackVar `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BrIfExpr) Reset()         { *m = BrIfExpr{} }
func (m *BrIfExpr) String() string { return proto.CompactTextString(m) }
func (*BrIfExpr) ProtoMessage()    {}
func (*BrIfExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{14}
}
func (m *BrIfExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrIfExpr.Unmarshal(m, b)
}
func (m *BrIfExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrIfExpr.Marshal(b, m, deterministic)
}
func (dst *BrIfExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrIfExpr.Merge(dst, src)
}
func (m *BrIfExpr) XXX_Size() int {
	return xxx_messageInfo_BrIfExpr.Size(m)
}
func (m *BrIfExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_BrIfExpr.DiscardUnknown(m)
}

var xxx_messageInfo_BrIfExpr proto.InternalMessageInfo

func (m *BrIfExpr) GetLabelId() uint32 {
	if m != nil {
		return m.LabelId
	}
	return 0
}

func (m *BrIfExpr) GetParam() *StackVar {
	if m != nil {
		return m.Param
	}
	return nil
}

type BrTableExpr struct {
	Labels               []uint32  `protobuf:"varint,1,rep,packed,name=labels,proto3" json:"labels,omitempty"`
	Param                *StackVar `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BrTableExpr) Reset()         { *m = BrTableExpr{} }
func (m *BrTableExpr) String() string { return proto.CompactTextString(m) }
func (*BrTableExpr) ProtoMessage()    {}
func (*BrTableExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{15}
}
func (m *BrTableExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrTableExpr.Unmarshal(m, b)
}
func (m *BrTableExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrTableExpr.Marshal(b, m, deterministic)
}
func (dst *BrTableExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrTableExpr.Merge(dst, src)
}
func (m *BrTableExpr) XXX_Size() int {
	return xxx_messageInfo_BrTableExpr.Size(m)
}
func (m *BrTableExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_BrTableExpr.DiscardUnknown(m)
}

var xxx_messageInfo_BrTableExpr proto.InternalMessageInfo

func (m *BrTableExpr) GetLabels() []uint32 {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *BrTableExpr) GetParam() *StackVar {
	if m != nil {
		return m.Param
	}
	return nil
}

type CallExpr struct {
	Index                uint32      `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Params               []*StackVar `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty"`
	Returns              []*StackVar `protobuf:"bytes,3,rep,name=returns,proto3" json:"returns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CallExpr) Reset()         { *m = CallExpr{} }
func (m *CallExpr) String() string { return proto.CompactTextString(m) }
func (*CallExpr) ProtoMessage()    {}
func (*CallExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{16}
}
func (m *CallExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallExpr.Unmarshal(m, b)
}
func (m *CallExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallExpr.Marshal(b, m, deterministic)
}
func (dst *CallExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallExpr.Merge(dst, src)
}
func (m *CallExpr) XXX_Size() int {
	return xxx_messageInfo_CallExpr.Size(m)
}
func (m *CallExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_CallExpr.DiscardUnknown(m)
}

var xxx_messageInfo_CallExpr proto.InternalMessageInfo

func (m *CallExpr) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *CallExpr) GetParams() []*StackVar {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *CallExpr) GetReturns() []*StackVar {
	if m != nil {
		return m.Returns
	}
	return nil
}

type CallIndirectExpr struct {
	Index                uint32      `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Params               []*StackVar `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty"`
	Returns              []*StackVar `protobuf:"bytes,3,rep,name=returns,proto3" json:"returns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CallIndirectExpr) Reset()         { *m = CallIndirectExpr{} }
func (m *CallIndirectExpr) String() string { return proto.CompactTextString(m) }
func (*CallIndirectExpr) ProtoMessage()    {}
func (*CallIndirectExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{17}
}
func (m *CallIndirectExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallIndirectExpr.Unmarshal(m, b)
}
func (m *CallIndirectExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallIndirectExpr.Marshal(b, m, deterministic)
}
func (dst *CallIndirectExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallIndirectExpr.Merge(dst, src)
}
func (m *CallIndirectExpr) XXX_Size() int {
	return xxx_messageInfo_CallIndirectExpr.Size(m)
}
func (m *CallIndirectExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_CallIndirectExpr.DiscardUnknown(m)
}

var xxx_messageInfo_CallIndirectExpr proto.InternalMessageInfo

func (m *CallIndirectExpr) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *CallIndirectExpr) GetParams() []*StackVar {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *CallIndirectExpr) GetReturns() []*StackVar {
	if m != nil {
		return m.Returns
	}
	return nil
}

type ConstExpr struct {
	Value                *Value      `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Returns              []*StackVar `protobuf:"bytes,2,rep,name=returns,proto3" json:"returns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ConstExpr) Reset()         { *m = ConstExpr{} }
func (m *ConstExpr) String() string { return proto.CompactTextString(m) }
func (*ConstExpr) ProtoMessage()    {}
func (*ConstExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{18}
}
func (m *ConstExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConstExpr.Unmarshal(m, b)
}
func (m *ConstExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConstExpr.Marshal(b, m, deterministic)
}
func (dst *ConstExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConstExpr.Merge(dst, src)
}
func (m *ConstExpr) XXX_Size() int {
	return xxx_messageInfo_ConstExpr.Size(m)
}
func (m *ConstExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_ConstExpr.DiscardUnknown(m)
}

var xxx_messageInfo_ConstExpr proto.InternalMessageInfo

func (m *ConstExpr) GetValue() *Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ConstExpr) GetReturns() []*StackVar {
	if m != nil {
		return m.Returns
	}
	return nil
}

type CurrentMemoryExpr struct {
	Returns              []*StackVar `protobuf:"bytes,1,rep,name=returns,proto3" json:"returns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CurrentMemoryExpr) Reset()         { *m = CurrentMemoryExpr{} }
func (m *CurrentMemoryExpr) String() string { return proto.CompactTextString(m) }
func (*CurrentMemoryExpr) ProtoMessage()    {}
func (*CurrentMemoryExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{19}
}
func (m *CurrentMemoryExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrentMemoryExpr.Unmarshal(m, b)
}
func (m *CurrentMemoryExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrentMemoryExpr.Marshal(b, m, deterministic)
}
func (dst *CurrentMemoryExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrentMemoryExpr.Merge(dst, src)
}
func (m *CurrentMemoryExpr) XXX_Size() int {
	return xxx_messageInfo_CurrentMemoryExpr.Size(m)
}
func (m *CurrentMemoryExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrentMemoryExpr.DiscardUnknown(m)
}

var xxx_messageInfo_CurrentMemoryExpr proto.InternalMessageInfo

func (m *CurrentMemoryExpr) GetReturns() []*StackVar {
	if m != nil {
		return m.Returns
	}
	return nil
}

type GetGlobalExpr struct {
	Index                uint32      `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Returns              []*StackVar `protobuf:"bytes,2,rep,name=returns,proto3" json:"returns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetGlobalExpr) Reset()         { *m = GetGlobalExpr{} }
func (m *GetGlobalExpr) String() string { return proto.CompactTextString(m) }
func (*GetGlobalExpr) ProtoMessage()    {}
func (*GetGlobalExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{20}
}
func (m *GetGlobalExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGlobalExpr.Unmarshal(m, b)
}
func (m *GetGlobalExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGlobalExpr.Marshal(b, m, deterministic)
}
func (dst *GetGlobalExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGlobalExpr.Merge(dst, src)
}
func (m *GetGlobalExpr) XXX_Size() int {
	return xxx_messageInfo_GetGlobalExpr.Size(m)
}
func (m *GetGlobalExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGlobalExpr.DiscardUnknown(m)
}

var xxx_messageInfo_GetGlobalExpr proto.InternalMessageInfo

func (m *GetGlobalExpr) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *GetGlobalExpr) GetReturns() []*StackVar {
	if m != nil {
		return m.Returns
	}
	return nil
}

type GetLocalExpr struct {
	Index                uint32      `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Returns              []*StackVar `protobuf:"bytes,2,rep,name=returns,proto3" json:"returns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetLocalExpr) Reset()         { *m = GetLocalExpr{} }
func (m *GetLocalExpr) String() string { return proto.CompactTextString(m) }
func (*GetLocalExpr) ProtoMessage()    {}
func (*GetLocalExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{21}
}
func (m *GetLocalExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLocalExpr.Unmarshal(m, b)
}
func (m *GetLocalExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLocalExpr.Marshal(b, m, deterministic)
}
func (dst *GetLocalExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLocalExpr.Merge(dst, src)
}
func (m *GetLocalExpr) XXX_Size() int {
	return xxx_messageInfo_GetLocalExpr.Size(m)
}
func (m *GetLocalExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLocalExpr.DiscardUnknown(m)
}

var xxx_messageInfo_GetLocalExpr proto.InternalMessageInfo

func (m *GetLocalExpr) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *GetLocalExpr) GetReturns() []*StackVar {
	if m != nil {
		return m.Returns
	}
	return nil
}

type GrowMemoryExpr struct {
	Param                *StackVar   `protobuf:"bytes,1,opt,name=param,proto3" json:"param,omitempty"`
	Returns              []*StackVar `protobuf:"bytes,2,rep,name=returns,proto3" json:"returns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GrowMemoryExpr) Reset()         { *m = GrowMemoryExpr{} }
func (m *GrowMemoryExpr) String() string { return proto.CompactTextString(m) }
func (*GrowMemoryExpr) ProtoMessage()    {}
func (*GrowMemoryExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{22}
}
func (m *GrowMemoryExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrowMemoryExpr.Unmarshal(m, b)
}
func (m *GrowMemoryExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrowMemoryExpr.Marshal(b, m, deterministic)
}
func (dst *GrowMemoryExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrowMemoryExpr.Merge(dst, src)
}
func (m *GrowMemoryExpr) XXX_Size() int {
	return xxx_messageInfo_GrowMemoryExpr.Size(m)
}
func (m *GrowMemoryExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_GrowMemoryExpr.DiscardUnknown(m)
}

var xxx_messageInfo_GrowMemoryExpr proto.InternalMessageInfo

func (m *GrowMemoryExpr) GetParam() *StackVar {
	if m != nil {
		return m.Param
	}
	return nil
}

func (m *GrowMemoryExpr) GetReturns() []*StackVar {
	if m != nil {
		return m.Returns
	}
	return nil
}

type IfExpr struct {
	LabelId              uint32    `protobuf:"varint,1,opt,name=label_id,json=labelId,proto3" json:"label_id,omitempty"`
	LabelUsed            bool      `protobuf:"varint,2,opt,name=label_used,json=labelUsed,proto3" json:"label_used,omitempty"`
	Param                *StackVar `protobuf:"bytes,3,opt,name=param,proto3" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *IfExpr) Reset()         { *m = IfExpr{} }
func (m *IfExpr) String() string { return proto.CompactTextString(m) }
func (*IfExpr) ProtoMessage()    {}
func (*IfExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{23}
}
func (m *IfExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IfExpr.Unmarshal(m, b)
}
func (m *IfExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IfExpr.Marshal(b, m, deterministic)
}
func (dst *IfExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IfExpr.Merge(dst, src)
}
func (m *IfExpr) XXX_Size() int {
	return xxx_messageInfo_IfExpr.Size(m)
}
func (m *IfExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_IfExpr.DiscardUnknown(m)
}

var xxx_messageInfo_IfExpr proto.InternalMessageInfo

func (m *IfExpr) GetLabelId() uint32 {
	if m != nil {
		return m.LabelId
	}
	return 0
}

func (m *IfExpr) GetLabelUsed() bool {
	if m != nil {
		return m.LabelUsed
	}
	return false
}

func (m *IfExpr) GetParam() *StackVar {
	if m != nil {
		return m.Param
	}
	return nil
}

type LoadExpr struct {
	OpCode               uint32      `protobuf:"varint,1,opt,name=op_code,json=opCode,proto3" json:"op_code,omitempty"`
	Align                uint32      `protobuf:"varint,2,opt,name=align,proto3" json:"align,omitempty"`
	Offset               uint32      `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Param                *StackVar   `protobuf:"bytes,4,opt,name=param,proto3" json:"param,omitempty"`
	Returns              []*StackVar `protobuf:"bytes,5,rep,name=returns,proto3" json:"returns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *LoadExpr) Reset()         { *m = LoadExpr{} }
func (m *LoadExpr) String() string { return proto.CompactTextString(m) }
func (*LoadExpr) ProtoMessage()    {}
func (*LoadExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{24}
}
func (m *LoadExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadExpr.Unmarshal(m, b)
}
func (m *LoadExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadExpr.Marshal(b, m, deterministic)
}
func (dst *LoadExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadExpr.Merge(dst, src)
}
func (m *LoadExpr) XXX_Size() int {
	return xxx_messageInfo_LoadExpr.Size(m)
}
func (m *LoadExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadExpr.DiscardUnknown(m)
}

var xxx_messageInfo_LoadExpr proto.InternalMessageInfo

func (m *LoadExpr) GetOpCode() uint32 {
	if m != nil {
		return m.OpCode
	}
	return 0
}

func (m *LoadExpr) GetAlign() uint32 {
	if m != nil {
		return m.Align
	}
	return 0
}

func (m *LoadExpr) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *LoadExpr) GetParam() *StackVar {
	if m != nil {
		return m.Param
	}
	return nil
}

func (m *LoadExpr) GetReturns() []*StackVar {
	if m != nil {
		return m.Returns
	}
	return nil
}

type LoopExpr struct {
	LabelId              uint32   `protobuf:"varint,1,opt,name=label_id,json=labelId,proto3" json:"label_id,omitempty"`
	LabelUsed            bool     `protobuf:"varint,2,opt,name=label_used,json=labelUsed,proto3" json:"label_used,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoopExpr) Reset()         { *m = LoopExpr{} }
func (m *LoopExpr) String() string { return proto.CompactTextString(m) }
func (*LoopExpr) ProtoMessage()    {}
func (*LoopExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{25}
}
func (m *LoopExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoopExpr.Unmarshal(m, b)
}
func (m *LoopExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoopExpr.Marshal(b, m, deterministic)
}
func (dst *LoopExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoopExpr.Merge(dst, src)
}
func (m *LoopExpr) XXX_Size() int {
	return xxx_messageInfo_LoopExpr.Size(m)
}
func (m *LoopExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_LoopExpr.DiscardUnknown(m)
}

var xxx_messageInfo_LoopExpr proto.InternalMessageInfo

func (m *LoopExpr) GetLabelId() uint32 {
	if m != nil {
		return m.LabelId
	}
	return 0
}

func (m *LoopExpr) GetLabelUsed() bool {
	if m != nil {
		return m.LabelUsed
	}
	return false
}

type ReturnExpr struct {
	Returns              []*StackVar `protobuf:"bytes,1,rep,name=returns,proto3" json:"returns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReturnExpr) Reset()         { *m = ReturnExpr{} }
func (m *ReturnExpr) String() string { return proto.CompactTextString(m) }
func (*ReturnExpr) ProtoMessage()    {}
func (*ReturnExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{26}
}
func (m *ReturnExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReturnExpr.Unmarshal(m, b)
}
func (m *ReturnExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReturnExpr.Marshal(b, m, deterministic)
}
func (dst *ReturnExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnExpr.Merge(dst, src)
}
func (m *ReturnExpr) XXX_Size() int {
	return xxx_messageInfo_ReturnExpr.Size(m)
}
func (m *ReturnExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnExpr.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnExpr proto.InternalMessageInfo

func (m *ReturnExpr) GetReturns() []*StackVar {
	if m != nil {
		return m.Returns
	}
	return nil
}

type SelectExpr struct {
	Param1               *StackVar   `protobuf:"bytes,1,opt,name=param1,proto3" json:"param1,omitempty"`
	Param2               *StackVar   `protobuf:"bytes,2,opt,name=param2,proto3" json:"param2,omitempty"`
	Param3               *StackVar   `protobuf:"bytes,3,opt,name=param3,proto3" json:"param3,omitempty"`
	Returns              []*StackVar `protobuf:"bytes,4,rep,name=returns,proto3" json:"returns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SelectExpr) Reset()         { *m = SelectExpr{} }
func (m *SelectExpr) String() string { return proto.CompactTextString(m) }
func (*SelectExpr) ProtoMessage()    {}
func (*SelectExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{27}
}
func (m *SelectExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelectExpr.Unmarshal(m, b)
}
func (m *SelectExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelectExpr.Marshal(b, m, deterministic)
}
func (dst *SelectExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelectExpr.Merge(dst, src)
}
func (m *SelectExpr) XXX_Size() int {
	return xxx_messageInfo_SelectExpr.Size(m)
}
func (m *SelectExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_SelectExpr.DiscardUnknown(m)
}

var xxx_messageInfo_SelectExpr proto.InternalMessageInfo

func (m *SelectExpr) GetParam1() *StackVar {
	if m != nil {
		return m.Param1
	}
	return nil
}

func (m *SelectExpr) GetParam2() *StackVar {
	if m != nil {
		return m.Param2
	}
	return nil
}

func (m *SelectExpr) GetParam3() *StackVar {
	if m != nil {
		return m.Param3
	}
	return nil
}

func (m *SelectExpr) GetReturns() []*StackVar {
	if m != nil {
		return m.Returns
	}
	return nil
}

type SetGlobalExpr struct {
	Index                uint32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Param                *StackVar `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SetGlobalExpr) Reset()         { *m = SetGlobalExpr{} }
func (m *SetGlobalExpr) String() string { return proto.CompactTextString(m) }
func (*SetGlobalExpr) ProtoMessage()    {}
func (*SetGlobalExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{28}
}
func (m *SetGlobalExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetGlobalExpr.Unmarshal(m, b)
}
func (m *SetGlobalExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetGlobalExpr.Marshal(b, m, deterministic)
}
func (dst *SetGlobalExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetGlobalExpr.Merge(dst, src)
}
func (m *SetGlobalExpr) XXX_Size() int {
	return xxx_messageInfo_SetGlobalExpr.Size(m)
}
func (m *SetGlobalExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_SetGlobalExpr.DiscardUnknown(m)
}

var xxx_messageInfo_SetGlobalExpr proto.InternalMessageInfo

func (m *SetGlobalExpr) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *SetGlobalExpr) GetParam() *StackVar {
	if m != nil {
		return m.Param
	}
	return nil
}

type SetLocalExpr struct {
	Index                uint32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Param                *StackVar `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SetLocalExpr) Reset()         { *m = SetLocalExpr{} }
func (m *SetLocalExpr) String() string { return proto.CompactTextString(m) }
func (*SetLocalExpr) ProtoMessage()    {}
func (*SetLocalExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{29}
}
func (m *SetLocalExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetLocalExpr.Unmarshal(m, b)
}
func (m *SetLocalExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetLocalExpr.Marshal(b, m, deterministic)
}
func (dst *SetLocalExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetLocalExpr.Merge(dst, src)
}
func (m *SetLocalExpr) XXX_Size() int {
	return xxx_messageInfo_SetLocalExpr.Size(m)
}
func (m *SetLocalExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_SetLocalExpr.DiscardUnknown(m)
}

var xxx_messageInfo_SetLocalExpr proto.InternalMessageInfo

func (m *SetLocalExpr) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *SetLocalExpr) GetParam() *StackVar {
	if m != nil {
		return m.Param
	}
	return nil
}

type StoreExpr struct {
	OpCode               uint32    `protobuf:"varint,1,opt,name=op_code,json=opCode,proto3" json:"op_code,omitempty"`
	Align                uint32    `protobuf:"varint,2,opt,name=align,proto3" json:"align,omitempty"`
	Offset               uint32    `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Param1               *StackVar `protobuf:"bytes,4,opt,name=param1,proto3" json:"param1,omitempty"`
	Param2               *StackVar `protobuf:"bytes,5,opt,name=param2,proto3" json:"param2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *StoreExpr) Reset()         { *m = StoreExpr{} }
func (m *StoreExpr) String() string { return proto.CompactTextString(m) }
func (*StoreExpr) ProtoMessage()    {}
func (*StoreExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{30}
}
func (m *StoreExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreExpr.Unmarshal(m, b)
}
func (m *StoreExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreExpr.Marshal(b, m, deterministic)
}
func (dst *StoreExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreExpr.Merge(dst, src)
}
func (m *StoreExpr) XXX_Size() int {
	return xxx_messageInfo_StoreExpr.Size(m)
}
func (m *StoreExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreExpr.DiscardUnknown(m)
}

var xxx_messageInfo_StoreExpr proto.InternalMessageInfo

func (m *StoreExpr) GetOpCode() uint32 {
	if m != nil {
		return m.OpCode
	}
	return 0
}

func (m *StoreExpr) GetAlign() uint32 {
	if m != nil {
		return m.Align
	}
	return 0
}

func (m *StoreExpr) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *StoreExpr) GetParam1() *StackVar {
	if m != nil {
		return m.Param1
	}
	return nil
}

func (m *StoreExpr) GetParam2() *StackVar {
	if m != nil {
		return m.Param2
	}
	return nil
}

type TeeLocalExpr struct {
	Index                uint32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Param                *StackVar `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TeeLocalExpr) Reset()         { *m = TeeLocalExpr{} }
func (m *TeeLocalExpr) String() string { return proto.CompactTextString(m) }
func (*TeeLocalExpr) ProtoMessage()    {}
func (*TeeLocalExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{31}
}
func (m *TeeLocalExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeeLocalExpr.Unmarshal(m, b)
}
func (m *TeeLocalExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeeLocalExpr.Marshal(b, m, deterministic)
}
func (dst *TeeLocalExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeeLocalExpr.Merge(dst, src)
}
func (m *TeeLocalExpr) XXX_Size() int {
	return xxx_messageInfo_TeeLocalExpr.Size(m)
}
func (m *TeeLocalExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_TeeLocalExpr.DiscardUnknown(m)
}

var xxx_messageInfo_TeeLocalExpr proto.InternalMessageInfo

func (m *TeeLocalExpr) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *TeeLocalExpr) GetParam() *StackVar {
	if m != nil {
		return m.Param
	}
	return nil
}

type UnaryExpr struct {
	OpCode               uint32      `protobuf:"varint,1,opt,name=op_code,json=opCode,proto3" json:"op_code,omitempty"`
	Param                *StackVar   `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
	Returns              []*StackVar `protobuf:"bytes,5,rep,name=returns,proto3" json:"returns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UnaryExpr) Reset()         { *m = UnaryExpr{} }
func (m *UnaryExpr) String() string { return proto.CompactTextString(m) }
func (*UnaryExpr) ProtoMessage()    {}
func (*UnaryExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ir_0947edaa29839433, []int{32}
}
func (m *UnaryExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnaryExpr.Unmarshal(m, b)
}
func (m *UnaryExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnaryExpr.Marshal(b, m, deterministic)
}
func (dst *UnaryExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnaryExpr.Merge(dst, src)
}
func (m *UnaryExpr) XXX_Size() int {
	return xxx_messageInfo_UnaryExpr.Size(m)
}
func (m *UnaryExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_UnaryExpr.DiscardUnknown(m)
}

var xxx_messageInfo_UnaryExpr proto.InternalMessageInfo

func (m *UnaryExpr) GetOpCode() uint32 {
	if m != nil {
		return m.OpCode
	}
	return 0
}

func (m *UnaryExpr) GetParam() *StackVar {
	if m != nil {
		return m.Param
	}
	return nil
}

func (m *UnaryExpr) GetReturns() []*StackVar {
	if m != nil {
		return m.Returns
	}
	return nil
}

func init() {
	proto.RegisterType((*ExportedFunction)(nil), "ir.ExportedFunction")
	proto.RegisterType((*Expr)(nil), "ir.Expr")
	proto.RegisterType((*Function)(nil), "ir.Function")
	proto.RegisterType((*FunctionSig)(nil), "ir.FunctionSig")
	proto.RegisterType((*ImportedFunction)(nil), "ir.ImportedFunction")
	proto.RegisterType((*Memory)(nil), "ir.Memory")
	proto.RegisterMapType((map[uint32][]byte)(nil), "ir.Memory.SegmentsEntry")
	proto.RegisterType((*Module)(nil), "ir.Module")
	proto.RegisterType((*StackVar)(nil), "ir.StackVar")
	proto.RegisterType((*StackVars)(nil), "ir.StackVars")
	proto.RegisterType((*TableEntry)(nil), "ir.TableEntry")
	proto.RegisterType((*Value)(nil), "ir.Value")
	proto.RegisterType((*BinaryExpr)(nil), "ir.BinaryExpr")
	proto.RegisterType((*BlockExpr)(nil), "ir.BlockExpr")
	proto.RegisterType((*BrExpr)(nil), "ir.BrExpr")
	proto.RegisterType((*BrIfExpr)(nil), "ir.BrIfExpr")
	proto.RegisterType((*BrTableExpr)(nil), "ir.BrTableExpr")
	proto.RegisterType((*CallExpr)(nil), "ir.CallExpr")
	proto.RegisterType((*CallIndirectExpr)(nil), "ir.CallIndirectExpr")
	proto.RegisterType((*ConstExpr)(nil), "ir.ConstExpr")
	proto.RegisterType((*CurrentMemoryExpr)(nil), "ir.CurrentMemoryExpr")
	proto.RegisterType((*GetGlobalExpr)(nil), "ir.GetGlobalExpr")
	proto.RegisterType((*GetLocalExpr)(nil), "ir.GetLocalExpr")
	proto.RegisterType((*GrowMemoryExpr)(nil), "ir.GrowMemoryExpr")
	proto.RegisterType((*IfExpr)(nil), "ir.IfExpr")
	proto.RegisterType((*LoadExpr)(nil), "ir.LoadExpr")
	proto.RegisterType((*LoopExpr)(nil), "ir.LoopExpr")
	proto.RegisterType((*ReturnExpr)(nil), "ir.ReturnExpr")
	proto.RegisterType((*SelectExpr)(nil), "ir.SelectExpr")
	proto.RegisterType((*SetGlobalExpr)(nil), "ir.SetGlobalExpr")
	proto.RegisterType((*SetLocalExpr)(nil), "ir.SetLocalExpr")
	proto.RegisterType((*StoreExpr)(nil), "ir.StoreExpr")
	proto.RegisterType((*TeeLocalExpr)(nil), "ir.TeeLocalExpr")
	proto.RegisterType((*UnaryExpr)(nil), "ir.UnaryExpr")
	proto.RegisterEnum("ir.ValueType", ValueType_name, ValueType_value)
	proto.RegisterEnum("ir.ElseExpr", ElseExpr_name, ElseExpr_value)
	proto.RegisterEnum("ir.EndExpr", EndExpr_name, EndExpr_value)
	proto.RegisterEnum("ir.UnreachableExpr", UnreachableExpr_name, UnreachableExpr_value)
}

func init() { proto.RegisterFile("ir.proto", fileDescriptor_ir_0947edaa29839433) }

var fileDescriptor_ir_0947edaa29839433 = []byte{
	// 1608 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0x4f, 0x6f, 0xdb, 0xc6,
	0x12, 0x37, 0xf5, 0x87, 0x22, 0x87, 0x92, 0x2c, 0x6f, 0x9c, 0x84, 0x79, 0x78, 0xef, 0xc5, 0x8f,
	0x49, 0x1e, 0x04, 0x23, 0x70, 0x5a, 0x59, 0x55, 0x8b, 0x06, 0x28, 0x90, 0x38, 0x4a, 0x2c, 0xc0,
	0x09, 0x0a, 0xca, 0xce, 0xa9, 0x00, 0x41, 0x89, 0x2b, 0x85, 0x30, 0x45, 0x0a, 0x24, 0xe5, 0xc8,
	0xf9, 0x10, 0xed, 0xb9, 0x87, 0xf6, 0xd8, 0x5b, 0xbf, 0x4b, 0xbf, 0x4d, 0xaf, 0xc5, 0xce, 0xee,
	0x8a, 0x94, 0x6c, 0xcb, 0x02, 0x52, 0xf4, 0xe4, 0xdd, 0xdf, 0xfc, 0x76, 0x38, 0x33, 0x3b, 0x33,
	0x3b, 0x16, 0x68, 0x7e, 0x7c, 0x30, 0x8d, 0xa3, 0x34, 0x22, 0x05, 0x3f, 0xb6, 0x3a, 0xd0, 0xe8,
	0xce, 0xa7, 0x51, 0x9c, 0x52, 0xef, 0xf5, 0x2c, 0x1c, 0xa6, 0x7e, 0x14, 0x92, 0x3a, 0x14, 0x7c,
	0xcf, 0x54, 0xf6, 0x94, 0x66, 0xcd, 0x2e, 0xf8, 0x1e, 0x21, 0x50, 0x0a, 0xdd, 0x09, 0x35, 0x0b,
	0x7b, 0x4a, 0x53, 0xb7, 0x71, 0x6d, 0xfd, 0xa1, 0x41, 0xa9, 0x3b, 0x9f, 0xc6, 0xa4, 0x09, 0xea,
	0xc0, 0x0f, 0xdd, 0xf8, 0x12, 0x0f, 0x18, 0xad, 0xfa, 0x81, 0x1f, 0x1f, 0xbc, 0x44, 0x84, 0xc9,
	0x8f, 0xb7, 0x6c, 0x21, 0x27, 0x4f, 0xa0, 0x3c, 0x08, 0xa2, 0xe1, 0x39, 0xea, 0x31, 0x5a, 0x35,
	0x24, 0x32, 0x40, 0xf0, 0xb8, 0x94, 0xfc, 0x1b, 0x0a, 0x83, 0xd8, 0x2c, 0x22, 0x07, 0x90, 0x13,
	0x0b, 0x42, 0x61, 0x10, 0x93, 0x47, 0x50, 0x1e, 0xc4, 0x8e, 0x3f, 0x32, 0x4b, 0x48, 0xa8, 0x72,
	0x42, 0x6f, 0x24, 0x28, 0xa5, 0x41, 0xdc, 0x1b, 0x91, 0xa7, 0xa0, 0x0d, 0x62, 0x27, 0x75, 0x07,
	0x01, 0x35, 0xcb, 0xc8, 0xdb, 0xe6, 0xbc, 0x53, 0x06, 0x09, 0x6a, 0x65, 0xc0, 0xb7, 0xc4, 0x82,
	0xd2, 0xd0, 0x0d, 0x02, 0x53, 0xcd, 0x34, 0x1e, 0xb9, 0x41, 0x20, 0x35, 0x32, 0x19, 0x79, 0x0e,
	0x35, 0xf6, 0xd7, 0xf1, 0x43, 0xcf, 0x8f, 0xe9, 0x30, 0x35, 0x2b, 0x48, 0xde, 0x95, 0xe4, 0x9e,
	0xc0, 0xc5, 0xa1, 0xea, 0x30, 0x87, 0x31, 0xc7, 0x87, 0x51, 0x98, 0xa4, 0xa6, 0x96, 0x39, 0x7e,
	0xc4, 0x00, 0xe9, 0x38, 0x4a, 0xc9, 0x77, 0x50, 0x1f, 0xce, 0xe2, 0x98, 0x86, 0xa9, 0x33, 0xa1,
	0x93, 0x28, 0xbe, 0x34, 0x75, 0xe4, 0xdf, 0x45, 0x3e, 0x97, 0xbc, 0x45, 0x81, 0x38, 0x57, 0x1b,
	0xe6, 0x41, 0xe6, 0x07, 0x0d, 0x12, 0x6a, 0xc2, 0x9e, 0xd2, 0xac, 0x73, 0x3f, 0xba, 0x41, 0x22,
	0xdd, 0x45, 0x19, 0x79, 0x08, 0x45, 0x1a, 0x7a, 0xa6, 0x81, 0x14, 0x03, 0x29, 0xa1, 0x27, 0x18,
	0x4c, 0x42, 0x5a, 0x00, 0x63, 0x9a, 0x3a, 0xe3, 0x20, 0x1a, 0xb8, 0x81, 0x59, 0x45, 0x03, 0x76,
	0x18, 0xef, 0x0d, 0x4d, 0xdf, 0x20, 0x28, 0xd8, 0xfa, 0x58, 0x02, 0xe4, 0x19, 0xb0, 0x8d, 0x13,
	0x44, 0x43, 0x37, 0x30, 0x6b, 0x78, 0xa4, 0x21, 0x8e, 0x9c, 0x30, 0x4c, 0x9c, 0xd0, 0xc6, 0x62,
	0x4f, 0xbe, 0x02, 0x63, 0x1c, 0x47, 0x1f, 0xa5, 0x9b, 0x75, 0x3c, 0x42, 0xf0, 0x48, 0x1c, 0x7d,
	0x5c, 0xf2, 0x11, 0xc6, 0x0b, 0x84, 0x65, 0x86, 0x3f, 0x32, 0xb7, 0xb3, 0xcc, 0x58, 0x5c, 0x7b,
	0xc1, 0x1f, 0x31, 0xf7, 0x83, 0xc8, 0xf5, 0xcc, 0x46, 0x76, 0x8d, 0x27, 0x91, 0x2b, 0x9d, 0x43,
	0x19, 0xe7, 0x44, 0x53, 0x73, 0x27, 0xcf, 0x89, 0xa6, 0x19, 0x27, 0x9a, 0xb2, 0x84, 0x8e, 0x69,
	0x3a, 0x8b, 0x43, 0x93, 0x64, 0x09, 0x6d, 0x23, 0x22, 0x13, 0x9a, 0xcb, 0x19, 0x33, 0xa1, 0x01,
	0xcb, 0x86, 0x3b, 0x19, 0xb3, 0x8f, 0x88, 0x64, 0x72, 0x39, 0x8b, 0x6a, 0x92, 0x45, 0x75, 0x37,
	0x8b, 0x6a, 0x7f, 0x35, 0xaa, 0x49, 0x3e, 0xaa, 0xc9, 0x22, 0xaa, 0x77, 0xb3, 0xa8, 0xf6, 0x57,
	0xa2, 0x9a, 0xc8, 0xa8, 0x3e, 0x81, 0x72, 0x92, 0x46, 0x31, 0x35, 0xef, 0x65, 0x69, 0xd6, 0x67,
	0x80, 0x4c, 0x33, 0x94, 0x32, 0xbd, 0x29, 0xa5, 0x42, 0xef, 0xfd, 0x4c, 0xef, 0x29, 0xa5, 0x4b,
	0x7a, 0x53, 0xb1, 0x67, 0x7a, 0x67, 0x58, 0xe0, 0x66, 0xa6, 0xf7, 0x2c, 0x57, 0xdf, 0x5c, 0x4a,
	0xbe, 0x06, 0x63, 0x16, 0xc6, 0xd4, 0x1d, 0x7e, 0xc0, 0xba, 0x7b, 0x80, 0x29, 0x76, 0x87, 0x93,
	0x17, 0xb0, 0x38, 0x92, 0x67, 0xbe, 0x54, 0xa1, 0x74, 0xee, 0x87, 0x9e, 0xf5, 0xa7, 0x02, 0xda,
	0x8d, 0x3d, 0xe8, 0x7f, 0x50, 0x4c, 0xfc, 0xb1, 0x68, 0x1d, 0x58, 0xcd, 0x92, 0xda, 0xf7, 0xc7,
	0x36, 0x93, 0x91, 0x27, 0xa0, 0xa2, 0x53, 0x89, 0x59, 0xdc, 0x2b, 0x36, 0xeb, 0xdc, 0xd0, 0xf7,
	0x6e, 0x30, 0xa3, 0xa7, 0x97, 0x53, 0x6a, 0x0b, 0x21, 0xf9, 0x2f, 0x94, 0xe9, 0x7c, 0x1a, 0x27,
	0x66, 0x69, 0xaf, 0xd8, 0x34, 0x5a, 0x1a, 0x16, 0xc1, 0x7c, 0x1a, 0xdb, 0x1c, 0x26, 0x8f, 0xa1,
	0x3e, 0x71, 0xe7, 0x4e, 0x92, 0xba, 0xc3, 0x73, 0x27, 0xf1, 0x3f, 0xf1, 0x16, 0x52, 0xb3, 0xab,
	0x13, 0x77, 0xde, 0x67, 0x60, 0xdf, 0xff, 0x44, 0xc9, 0x53, 0x00, 0xce, 0xb8, 0x70, 0xe3, 0x44,
	0xb4, 0x0e, 0x11, 0x71, 0x77, 0x78, 0xfe, 0xde, 0x8d, 0x13, 0x5b, 0x4f, 0xe4, 0x92, 0xfc, 0x07,
	0xe0, 0x83, 0x9b, 0x38, 0x81, 0x3b, 0xa0, 0x41, 0x82, 0xbd, 0x43, 0xb3, 0xf5, 0x0f, 0x6e, 0x72,
	0x82, 0x80, 0x15, 0x81, 0x91, 0xf3, 0x86, 0x1c, 0x80, 0x31, 0x75, 0x63, 0x77, 0xe2, 0xa4, 0x97,
	0x53, 0x9a, 0x98, 0xca, 0x75, 0xde, 0x00, 0x32, 0xd8, 0x32, 0x21, 0x5f, 0x40, 0x95, 0x67, 0xa4,
	0x38, 0x50, 0xb8, 0xee, 0x80, 0xc1, 0x29, 0x78, 0xc2, 0xfa, 0x51, 0x81, 0x46, 0x6f, 0xb2, 0xd2,
	0xf6, 0x1f, 0x82, 0x31, 0x89, 0xbc, 0x59, 0x40, 0x1d, 0xec, 0xf6, 0x0a, 0x76, 0x7b, 0xe0, 0xd0,
	0x3b, 0x77, 0x42, 0x99, 0x17, 0x23, 0x9f, 0x06, 0x9e, 0x93, 0x7b, 0x0d, 0x74, 0x44, 0x50, 0x2c,
	0xae, 0xa8, 0xb8, 0xe6, 0x8a, 0xee, 0x43, 0x85, 0x99, 0xe8, 0xf8, 0x1e, 0xf6, 0xef, 0x9a, 0xad,
	0xb2, 0x6d, 0xcf, 0xb3, 0x7e, 0x52, 0x40, 0x15, 0x55, 0x4e, 0xa0, 0x84, 0x51, 0xe7, 0x77, 0x8f,
	0x6b, 0xd2, 0x06, 0x2d, 0xa1, 0xe3, 0x09, 0x0d, 0x53, 0xee, 0x9d, 0xd1, 0x32, 0x99, 0x7e, 0x7e,
	0xe2, 0xa0, 0x2f, 0x44, 0xdd, 0x30, 0x8d, 0x2f, 0xed, 0x05, 0xf3, 0x5f, 0xcf, 0xa1, 0xb6, 0x24,
	0x22, 0x0d, 0x28, 0x9e, 0xd3, 0x4b, 0xa1, 0x99, 0x2d, 0xc9, 0x2e, 0x94, 0x2f, 0x58, 0x88, 0xd0,
	0x9b, 0xaa, 0xcd, 0x37, 0xdf, 0x16, 0xbe, 0x51, 0xac, 0xdf, 0x0b, 0xa0, 0xbe, 0x45, 0xdf, 0xc9,
	0x23, 0xa8, 0xf0, 0xca, 0xe5, 0x77, 0x61, 0xb4, 0xf4, 0x45, 0x68, 0x6d, 0x29, 0x21, 0xfb, 0xa0,
	0x8f, 0x84, 0xbb, 0xd2, 0xc6, 0x6a, 0x3e, 0x06, 0x76, 0x26, 0x26, 0x47, 0x40, 0xa8, 0x78, 0x74,
	0x9d, 0xec, 0x50, 0x11, 0x0f, 0xed, 0x8a, 0x7c, 0x5c, 0xba, 0x1b, 0x7b, 0x87, 0xae, 0x20, 0xa8,
	0xc4, 0x9f, 0x5c, 0x51, 0x52, 0xca, 0x94, 0xac, 0x5e, 0xb0, 0xbd, 0xe3, 0x4f, 0x56, 0x95, 0x58,
	0xa0, 0x8a, 0x26, 0x5c, 0xce, 0xda, 0x2a, 0x0f, 0xab, 0x2d, 0x24, 0xe4, 0x31, 0x94, 0xf9, 0x53,
	0xaa, 0xa2, 0x6e, 0xec, 0x72, 0xfc, 0x21, 0xc5, 0x78, 0x73, 0xa1, 0x75, 0x0c, 0x9a, 0x4c, 0xfd,
	0x2b, 0xc5, 0xfb, 0x14, 0x00, 0x03, 0x8b, 0xf9, 0x89, 0xa1, 0xbe, 0x92, 0x9e, 0xfa, 0x85, 0x5c,
	0x5a, 0x7d, 0xd0, 0x17, 0x45, 0xc4, 0xae, 0xcc, 0x3f, 0x6c, 0x61, 0xdc, 0x6b, 0x36, 0x5b, 0x22,
	0xd2, 0x69, 0x63, 0x88, 0x19, 0xd2, 0x69, 0x33, 0x64, 0x74, 0xd8, 0xc2, 0xf8, 0xd5, 0x6c, 0xb6,
	0x44, 0xa4, 0xd3, 0xc6, 0x60, 0x30, 0xa4, 0xd3, 0xb6, 0x4e, 0x00, 0x32, 0x9b, 0x59, 0xaa, 0xcb,
	0x90, 0x39, 0xc2, 0x52, 0x62, 0x83, 0x84, 0x7a, 0x1e, 0x4b, 0xf5, 0x70, 0x36, 0x71, 0xb0, 0xc8,
	0x12, 0xb4, 0xb8, 0x66, 0xeb, 0xe1, 0x6c, 0xf2, 0x3d, 0x02, 0x96, 0x03, 0x65, 0x34, 0x9d, 0x10,
	0x69, 0x9e, 0xd2, 0xdc, 0x61, 0x4f, 0x28, 0x33, 0x90, 0x48, 0x03, 0x95, 0x26, 0x41, 0xac, 0xd3,
	0x66, 0x18, 0x37, 0x51, 0x69, 0x16, 0x18, 0x36, 0xe2, 0x3c, 0x6e, 0xa4, 0xd2, 0x54, 0x10, 0xeb,
	0xb4, 0x17, 0xbd, 0xf0, 0x67, 0x05, 0x20, 0x1b, 0xa2, 0x58, 0xdd, 0x44, 0x53, 0x67, 0x18, 0x79,
	0xb2, 0x2c, 0xd4, 0x68, 0x7a, 0x14, 0x79, 0x94, 0x3c, 0x06, 0x15, 0x6d, 0xfc, 0x52, 0x74, 0xc6,
	0x6a, 0xbe, 0x05, 0xd9, 0x42, 0xb6, 0x60, 0xb5, 0x44, 0x71, 0x5e, 0xc7, 0x6a, 0x91, 0xff, 0x43,
	0x85, 0xf7, 0x08, 0x99, 0x45, 0xcb, 0x34, 0x29, 0xb4, 0xba, 0xa0, 0x2f, 0xc6, 0x36, 0xf2, 0x00,
	0x34, 0xec, 0x6a, 0xce, 0xe2, 0xc2, 0x2b, 0xb8, 0xe7, 0x31, 0xe4, 0xa2, 0x59, 0x42, 0x3d, 0xb4,
	0x4f, 0xb3, 0x75, 0x44, 0xce, 0x12, 0xea, 0x59, 0x8f, 0x40, 0xe5, 0x93, 0xdd, 0x1a, 0x1d, 0x56,
	0x0f, 0x34, 0x39, 0xdd, 0xad, 0xfb, 0x94, 0x05, 0x65, 0x74, 0xe2, 0xda, 0x28, 0x70, 0x91, 0xd5,
	0x03, 0x23, 0x37, 0x00, 0x92, 0x7b, 0xa0, 0x8a, 0x76, 0xcc, 0x73, 0x4b, 0xec, 0x36, 0x52, 0x15,
	0x82, 0x26, 0x27, 0x44, 0xd6, 0x41, 0xfc, 0xd0, 0xa3, 0x73, 0x61, 0x12, 0xdf, 0x2c, 0x22, 0xbe,
	0xd4, 0x0a, 0x56, 0x22, 0x9e, 0xe4, 0x23, 0x5e, 0x5c, 0x17, 0xf1, 0x0b, 0x68, 0xac, 0x0e, 0x99,
	0xff, 0xc8, 0x77, 0x4f, 0x41, 0x5f, 0xcc, 0xa9, 0xe4, 0xa1, 0x6c, 0x95, 0x7c, 0xce, 0xcf, 0xf5,
	0x40, 0x8e, 0xe7, 0xb5, 0x16, 0xd6, 0x69, 0x7d, 0x0e, 0x3b, 0x57, 0xa6, 0xd9, 0xfc, 0x61, 0x65,
	0xdd, 0xe1, 0xb7, 0x50, 0x5b, 0x9a, 0x44, 0x6f, 0x88, 0xc3, 0xa6, 0xb6, 0x9c, 0x40, 0x35, 0x3f,
	0xa5, 0x7e, 0xa6, 0xb6, 0x1f, 0xa0, 0xbe, 0x3c, 0xc0, 0x66, 0xd9, 0xa4, 0xdc, 0x98, 0x4d, 0x1b,
	0x6b, 0x1f, 0x81, 0x7a, 0x7b, 0x25, 0xac, 0x2f, 0xba, 0xcc, 0x9e, 0xe2, 0xcd, 0xd9, 0xfd, 0x8b,
	0x02, 0x9a, 0x9c, 0x9c, 0x6f, 0xee, 0x3c, 0xbb, 0x50, 0x76, 0x03, 0x7f, 0x1c, 0x8a, 0xe6, 0xc8,
	0x37, 0xac, 0xaa, 0xa2, 0xd1, 0x28, 0xa1, 0x29, 0x7e, 0x80, 0xb1, 0x71, 0x97, 0x7d, 0xb7, 0xb4,
	0x51, 0x1c, 0xca, 0xeb, 0xe2, 0xf0, 0x8a, 0x99, 0xc7, 0x87, 0xf6, 0xcf, 0x68, 0x3f, 0x6d, 0x80,
	0x6c, 0xa8, 0xdf, 0x38, 0xfd, 0x7e, 0x53, 0x00, 0xb2, 0x09, 0x3f, 0xd7, 0x7e, 0x95, 0x8d, 0xda,
	0x6f, 0x61, 0x4d, 0xfb, 0x95, 0xac, 0xc3, 0x35, 0x4d, 0xfa, 0x70, 0xe3, 0x26, 0xdd, 0x63, 0xb3,
	0xcf, 0xed, 0x75, 0xb2, 0x49, 0xb7, 0x3b, 0x86, 0x6a, 0xff, 0xf6, 0x1a, 0xd9, 0x44, 0xd3, 0xaf,
	0x0a, 0x7b, 0xda, 0xc5, 0x7f, 0x24, 0x7f, 0x57, 0x6a, 0x65, 0x77, 0x50, 0xda, 0xe8, 0x0e, 0xca,
	0x37, 0xdf, 0x01, 0x73, 0x35, 0xff, 0x6f, 0xd0, 0x67, 0xb8, 0x3a, 0x05, 0xfd, 0xec, 0xf6, 0xe7,
	0x7b, 0x03, 0x4d, 0x9b, 0x96, 0xc5, 0xfe, 0x33, 0xd0, 0x17, 0xe3, 0x14, 0xa9, 0x40, 0xb1, 0x77,
	0xd8, 0x6a, 0x6c, 0xe1, 0xa2, 0xd3, 0x6e, 0x28, 0x6c, 0xf1, 0xfa, 0xb0, 0xd5, 0x28, 0xe0, 0xa2,
	0xd3, 0x6e, 0x14, 0xf7, 0x77, 0x41, 0x93, 0xbf, 0x0f, 0x10, 0x0d, 0x4a, 0xdd, 0x93, 0x7e, 0xb7,
	0xb1, 0xb5, 0x4f, 0xa0, 0x22, 0x7e, 0x12, 0x60, 0xcc, 0xee, 0xbb, 0x57, 0x8d, 0xad, 0x7d, 0x0b,
	0xb6, 0x57, 0xfe, 0x87, 0x23, 0xdb, 0x60, 0x9c, 0xbd, 0xb3, 0xbb, 0x2f, 0x8e, 0x8e, 0x5f, 0xbc,
	0x3c, 0xe9, 0x36, 0xb6, 0x06, 0x2a, 0xfe, 0xa6, 0x74, 0xf8, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x6a, 0xad, 0xcb, 0x47, 0x5f, 0x12, 0x00, 0x00,
}
